package org.tron.service;

import java.util.TimeZone;
import lombok.extern.slf4j.Slf4j;
import org.tron.common.config.Args;
import org.tron.common.utils.WalletUtil;
import org.tron.service.check.CheckTransaction;
import org.tron.service.task.ChainTask;
import org.tron.service.task.TaskEnum;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
@Slf4j(topic = "app")
public class App {

  private static int fixedThreads = 5;

  public static void main(String[] args) {
    TimeZone.setDefault(TimeZone.getTimeZone("UTC"));
    logger.info("start...");
    Args arg = Args.getInstance();
    arg.setParam(args);
    CheckTransaction checkTransaction = new CheckTransaction();
    ChainTask sideChainTask = new ChainTask(TaskEnum.SIDE_CHAIN,
        WalletUtil.encode58Check(arg.getSidechainGateway()),
        Args.getInstance().getSidechainKafka(), fixedThreads, checkTransaction);
    ChainTask mainChainTask = new ChainTask(TaskEnum.MAIN_CHAIN,
        WalletUtil.encode58Check(arg.getMainchainGateway()),
        Args.getInstance().getMainchainKafka(), fixedThreads, checkTransaction);
    sideChainTask.start();
    mainChainTask.start();
  }
}
