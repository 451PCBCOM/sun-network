syntax = "proto3";

import "google/protobuf/any.proto";
import "core/Tron.proto";

package protocol;


option java_package = "org.tron.protos"; //Specify the name of the package that generated the Java file
option java_outer_classname = "Sidechain"; //Specify the class name of the generated Java file
option go_package = "github.com/tronprotocol/grpc-gateway/core";

message TransactionExtension {
  Transaction transaction = 1;
  bytes txid = 2;
  TaskEnum task_enum = 3;
}

enum TaskEnum {
  MAIN_CHAIN = 0x00;
  SIDE_CHAIN = 0x01;
}

message ActuatorMsg {
  enum ActuatorType {
    DepositTRC10Actuator = 0;
    DepositTRC20Actuator = 1;
    DepositTRC721Actuator = 2;
    DepositTRXActuator = 3;
    DeployDAppTRC20AndMappingActuator = 4;
    DeployDAppTRC721AndMappingActuator = 5;
    MultiSignForWithdrawTokenActuator = 6;
    MultiSignForWithdrawTRC10Actuator = 8;
    MultiSignForWithdrawTRXActuator = 9;
    WithdrawTRC10Actuator = 10;
    WithdrawTRC20Actuator = 11;
    WithdrawTRC721Actuator = 12;
    WithdrawTRXActuator = 13;
  }
  ActuatorType type = 1;
  google.protobuf.Any parameter = 2;
}

message DepositTRC10Actuator {
  bytes owner_address = 1;
  bytes account_address = 2;
  AccountType type = 3;
}

// Update account name. Account name is not unique now.
message DepositTRC20Actuator {
  bytes account_name = 1;
  bytes owner_address = 2;
}

// Set account id if the account has no id. Account id is unique and case insensitive.
message DepositTRC721Actuator {
  bytes account_id = 1;
  bytes owner_address = 2;
}

message DepositTRXActuator {
  bytes owner_address = 1;
  bytes to_address = 2;
  int64 amount = 3;
}

message DeployDAppTRC20AndMappingActuator {
  bytes asset_name = 1; // this field is token name before the proposal ALLOW_SAME_TOKEN_NAME is active, otherwise it is token id and token is should be in string format.
  bytes owner_address = 2;
  bytes to_address = 3;
  int64 amount = 4;
}


message DeployDAppTRC721AndMappingActuator {
  bytes owner_address = 1;
  repeated bytes vote_address = 2;
  bool support = 3;
  int32 count = 5;
}

message MultiSignForWithdrawTokenActuator {
  message Vote {
    bytes vote_address = 1;
    int64 vote_count = 2;
  }
  bytes owner_address = 1;
  repeated Vote votes = 2;
  bool support = 3;
}

message MultiSignForWithdrawTRC10Actuator {
  bytes owner_address = 1;
  bytes contract_address = 2;
  int64 consume_user_resource_percent = 3;
}

message MultiSignForWithdrawTRXActuator {
  bytes owner_address = 1;
  bytes contract_address = 2;
  int64 origin_energy_limit = 3;
}

message WithdrawTRC10Actuator {
  bytes owner_address = 1;
  bytes contract_address = 2;
}

message WithdrawTRC20Actuator {
  bytes owner_address = 1;
  bytes url = 2;
}
message WithdrawTRC721Actuator {
  bytes owner_address = 1;
  bytes url = 2;
}
message WithdrawTRXActuator {
  bytes owner_address = 1;
  bytes url = 2;
}
