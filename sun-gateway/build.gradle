/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8/userguide/tutorial_java_projects.html
 */
buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
    }
}

group 'org.tron'
version '1.0.0'

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'application'
apply plugin: 'checkstyle'

// Define the main class for the application
mainClassName = 'App'

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.4.0'
    // google grpc
    compile group: 'io.grpc', name: 'grpc-netty', version: '1.14.0'
    compile group: 'io.grpc', name: 'grpc-protobuf', version: '1.14.0'
    compile group: 'io.grpc', name: 'grpc-stub', version: '1.14.0'
    // end google grpc
    compile group: 'com.google.api.grpc', name: 'googleapis-common-protos', version: '0.0.3'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}
def versions = [
        checkstyle: '8.7',
]

check.dependsOn 'lint'

checkstyle {
    toolVersion = "${versions.checkstyle}"
    configFile = file("config/checkstyle/checkStyleAll.xml")
}


checkstyleMain {
    source = 'src/main/java'
}

task lint(type: Checkstyle) {
    // Cleaning the old log because of the creation of the new ones (not sure if totaly needed)
    delete fileTree(dir: "${project.rootDir}/app/build/reports")
    source 'src'
    include '**/*.java'
    exclude 'main/gen/**'
    exclude 'test/**'
    // empty classpath
    classpath = files()
    //Failing the build
    ignoreFailures = false
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/protos'
        }
        java {
            srcDir 'src/main/gen'
            srcDir 'src/main/java'
        }
    }

}
protobuf {
    generatedFilesBaseDir = "$projectDir/src/"
    protoc {
        artifact = "com.google.protobuf:protoc:3.5.1-1"
    }

    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.9.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { outputSubDir = "gen" }
            }
        }
        all()*.plugins {
            grpc {
                outputSubDir = "gen"
            }
        }
    }
}